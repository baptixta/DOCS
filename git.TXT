----------- GIT -----------
-REGISTRAR USER
git config --global user.name "Nome"

- REGISTRAR EMAIL
git config --global user.email "Email"

- CONFIGURAR EDITOR
git config --global core.editor "(nome do editor no cmd)"

- "PEGAR" INFORMAÇÃO ESPECÍFICA
git config (user.name | user.email | core.editor)

- "PEGAR" TODAS AS INFOS
git config --list

- LIMPAR O PROMPT
CTRL + L

----------- REPOSITÓRIO LOCAL ---------
- VERIFICAR ONDE VOCÊ ESTÁ
pwd

- CRIAR PASTAS
mkdir nome-pasta

- APAGAR PASTAS
rmdir nome-pasta

- ENTRAR NA PASTA & SAIR
cd nome-pasta/
cd ..

- INICIALIZAR REPOSITÓRIO
git init

----------- CICLO DE VIDA DOS STATUS DOS ARQUIVOS ---------
- git status
- git add .
- git git commit -am ""
- git pull
- git push origin master

----------- CRIANDO BRANCHES (RAMIFICAÇÕES) -----------

git checkout -b nome-branch

----------- DESFAZENDO COISAS ---------

- REMOVER ARQUIVOS E DIRETÓRIOS QUE ESTÃO "UNTRACKED"
git clean -fd

- RETORNAR O ARQUIVO PRA ANTES DA MUDANÇA
git checkout nome-arquivo

- RETORNAR O ARQUIVO PRA UM COMMIT ESPECÍFICO
git checkout nome-hash nome-arquivo

- RETORNAR PARA UM COMMIT ESPECÍFICO E CRIA UM COMMIT REGISTRANDO ESSA ALTERAÇÃO
git revert HEAD~(hash)

- RETORNAR O ARQUIVO QUANDO JÁ FOI DADO "ADD"
git reset HEAD nome-arquivo

- RETORNAR O ARQUIVO QUANDO JÁ FOI "COMMITADO"
git reset --soft --mixed --hard
EXEMPLO: git reset --soft b4a885d321a(hash)

----------- DIFFS ---------
Mostra as modificações antes de subir os arquivos (útil)

- VER TUDO ANTES DE SUBIR
git diff

- SOMENTE O NOME DO ARQUIVO MODIFICADO
git diff --name-only

- VER DIFERENÇAS OCORRIDAS ENTRE ARQUIVOS
git diff (hash)..(hash)

----------- LOGS ---------
Mostra autores, commits e mais coisas.

- VER OS LOGS
git log

- VER TODOS (MESMO QUE TENHA SIDO "APAGADO") OS LOGS
git reflog

- VER LOGS NA ORDEM CONTRÁRIA (do mais antigo pro mais novo)
git log --reverse

- LOGS EM APENAS UMA LINHA
git log --oneline

- VERSÃO MAIS DETALHADA DOS LOGS
git log --summary

- LOG "RESUMIDO"
git shortlog
git shortlog -sn (nome e quantidade de commits)

- VER NA FORMA GRÁFICA
git log --graph

- ESPECIFICAÇÕES MAIORES
git log --decorate

- FILTRAR PELO AUTOR
git log --author="nome"

--------- STASH ---------
GUARDA MODIFICAÇÕES EM UM "ARQUIVO FANTASMA TEMPORARIAMENTE"

- GUARDA O ARQUIVO 
git stash

- LISTA DE STASHS
git stash list

- FAZ OS ARQUIVOS VOLTAREM PRO ARQUIVO "NORMAL"
git stash apply <identificador>

- APLICA O ÚLITMO STASH E REMOVE OS OUTROS
git stash pop

--------- TAG ---------
"APELIDOS" PARA OS COMMITS

- DA UM "ID" PARA O COMMIT
git tag
